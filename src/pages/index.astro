---
import Header from "../components/Header.astro";
import Sidebar from "../components/Sidebar.astro";
import AboutMe from "../components/AboutMe.astro";
import Skills from "../components/Skills.astro";
import Contact from "../components/Contact.astro";
import Footer from "../components/Footer.astro";
import ProjectList from "../components/ProjectList.astro";
import '../styles/global.css';
---
<html lang="en" class="dark">
  <html class="dark">
  <head>
    <title>Pedro Mula Montesinos - Portfolio</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link href="/src/styles/global.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css">
    <link rel="stylesheet" href="/styles/global.css"/>
    <script src="/scripts/sidebar.js" defer is:inline></script>


  </head>
  <body class="flex  bg-fixed bg-cover bg-center text-gray-900 dark:text-gray-300">
    <Sidebar />
    <div class="flex-1 ml-[25%] p-8 overflow-y-auto">
      <Header />
      <main class="max-w-5xl mx-auto space-y-16">
        <section id="about" class="section"><AboutMe /></section>
        <section id="projects" class="section"><ProjectList /></section>
        <section id="skills" class="section"><Skills /></section>
        <section id="contact" class="section"><Contact /></section>
      </main>
      <Footer />
    </div>
<script>

document.addEventListener("DOMContentLoaded", function () {
  const sections = document.querySelectorAll(".section");
  const links = document.querySelectorAll(".sidebar-link");


  const observer = new IntersectionObserver(
    (entries) => {
      let activeSection: string | null = null;

      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          activeSection = entry.target.id;
        }
      });

      if (activeSection) {
        links.forEach((link) => {
          const isActive = link.getAttribute("data-section") === activeSection;
          link.classList.toggle("active", isActive);
          link.classList.toggle("scale-110", isActive);
        });
      }
    },
    { root: null, rootMargin: "-40% 0px -40% 0px", threshold: 0.1 }
  );

  sections.forEach((section) => observer.observe(section));
});

</script>
  </body>
</html>

